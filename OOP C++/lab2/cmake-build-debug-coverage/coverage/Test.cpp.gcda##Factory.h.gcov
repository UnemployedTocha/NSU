        -:    0:Source:C:/Users/Pepega/CLionProjects/OOP_LAB2/Factory.h
        -:    0:Graph:C:\Users\Pepega\CLionProjects\OOP_LAB2\cmake-build-debug-coverage\CMakeFiles\OOP_LAB2.dir\Test.cpp.gcno
        -:    0:Data:C:\Users\Pepega\CLionProjects\OOP_LAB2\cmake-build-debug-coverage\CMakeFiles\OOP_LAB2.dir\Test.cpp.gcda
        -:    0:Runs:1
        -:    1:#pragma once
        -:    2:#include <map>
        -:    3:#include <assert.h>
        -:    4:#include "Command.h"
        -:    5:
        -:    6:template<class Product, class Id, class Creator>
        -:    7:class Factory {
        -:    8:public:
function _ZN7FactoryI7CommandNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFPS0_vEE11getInstanceEv called 142 returned 100% blocks executed 100%
      142:    9:    static Factory* getInstance() {
      142:   10:        static Factory f;
      142:   10-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 141
        1:   10-block  1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        1:   10-block  2
call    5 returned 1
call    6 returned 1
call    7 returned 1
      142:   11:        return &f;
      142:   11-block  0
        -:   12:    }
        -:   13:
        -:   14:    Product* createProductByName(const Id& name) {
        -:   15:        auto creator  = creators_.at(name);
        -:   16:        return creator();
        -:   17:    }
        -:   18:
function _ZN7FactoryI7CommandNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFPS0_vEE8regist3rERKS6_S9_ called 17 returned 100% blocks executed 88%
       17:   19:    bool regist3r(const Id& name, Creator creator) {
      17*:   20:        assert(creator);
       17:   20-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 17
    %%%%%:   20-block  1
call    2 never executed
        -:   21:
       17:   22:        if(isRegist3red(name)) {
       17:   22-block  0
call    0 returned 17
branch  1 taken 1 (fallthrough)
branch  2 taken 16
        1:   23:            return false;
        1:   23-block  0
        -:   24:        }
       16:   25:        creators_[name] = creator;
       16:   25-block  0
call    0 returned 16
       16:   26:        return true;
        -:   27:    }
        -:   28:
function _ZN7FactoryI7CommandNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFPS0_vEE12isRegist3redERKS6_ called 213 returned 100% blocks executed 100%
      213:   29:    bool isRegist3red(const Id& name) {
      213:   30:        return creators_.find(name) != creators_.end();
      213:   30-block  0
call    0 returned 213
call    1 returned 213
branch  2 taken 213 (fallthrough)
branch  3 taken 0 (throw)
      213:   30-block  1
call    4 returned 213
      213:   30-block  2
        -:   31:    }
        -:   32:
function _ZN7FactoryI7CommandNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFPS0_vEE23isComplexFuncRegist3redERKS6_ called 143 returned 100% blocks executed 100%
      143:   33:    bool isComplexFuncRegist3red(const Id& name) {
      143:   34:        return complexCreators_.find(name) != complexCreators_.end();
      143:   34-block  0
call    0 returned 143
call    1 returned 143
branch  2 taken 143 (fallthrough)
branch  3 taken 0 (throw)
      143:   34-block  1
call    4 returned 143
      143:   34-block  2
        -:   35:    }
        -:   36:
function _ZN7FactoryI7CommandNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFPS0_vEE19complexFuncRegist3rERKS6_S9_ called 4 returned 100% blocks executed 89%
        4:   37:    bool complexFuncRegist3r(const Id& name, Creator creator) {
       4*:   38:        assert(creator);
        4:   38-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 4
    %%%%%:   38-block  1
call    2 never executed
        -:   39:
        4:   40:        if(isComplexFuncRegist3red(name)) {
        4:   40-block  0
call    0 returned 4
branch  1 taken 1 (fallthrough)
branch  2 taken 3
        1:   41:            return false;
        1:   41-block  0
        -:   42:        }
        3:   43:        creators_[name] = creator;
        3:   43-block  0
call    0 returned 3
        3:   44:        complexCreators_[name] = creator;
call    0 returned 3
        3:   45:        return true;
        -:   46:    }
        -:   47:private:
function _ZN7FactoryI7CommandNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFPS0_vEEC1Ev called 1 returned 100% blocks executed 100%
        1:   48:    Factory() = default;
        1:   48-block  0
call    0 returned 1
call    1 returned 1
        -:   49:
        -:   50:    std::map<Id, Creator> creators_;
        -:   51:    std::map<Id, Creator> complexCreators_;
        -:   52:};
